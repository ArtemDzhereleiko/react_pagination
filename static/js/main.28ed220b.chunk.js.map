{"version":3,"sources":["Pagination.jsx","App.js","index.js"],"names":["Pagination","state","total","props","perPage","page","nextPage","event","preventDefault","setState","previousPage","onClickHandler","value","this","paginationCalculate","aria-label","className","href","onClick","Array","keys","map","index","key","uuid","React","PureComponent","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"sPAIaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,EAAKC,MAAMD,MAClBE,QAAS,EAAKD,MAAMC,QACpBC,KAAM,EAAKF,MAAME,MAJrB,EAOEC,SAAW,SAACC,GACVA,EAAMC,iBACN,EAAKC,UAAS,SAAAR,GAAK,MAAK,CAAEI,KAAMJ,EAAMI,KAAO,OATjD,EAYEK,aAAe,SAACH,GACdA,EAAMC,iBACN,EAAKC,UAAS,SAAAR,GAAK,MAAK,CAAEI,KAAMJ,EAAMI,KAAO,OAdjD,EAiBEM,eAAiB,SAACJ,EAAOK,GACvBL,EAAMC,iBACN,EAAKC,SAAS,CAAEJ,KAAMO,KAnB1B,4CAsBE,WAAU,IAAD,OACP,EAAiCC,KAAKZ,MAA9BC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,KAClBS,EAAsBZ,EAAQE,EAEpC,OACE,oCACE,0CACA,sCACOC,EAAO,GAAKD,EAAU,EAD7B,YACkCC,EAAOD,EADzC,eACuDF,IAEvD,yBAAKa,aAAW,2BACd,wBAAIC,UAAU,cACZ,wBAAIA,UAAS,oBAAwB,IAATX,EAAa,WAAa,KACpD,uBAAGW,UAAU,YAAYC,KAAK,IAAIC,QAASL,KAAKH,cAAhD,aAID,YAAIS,MAAML,GAAqBM,QAAQC,KAAI,SAAAC,GAAK,OAC/C,wBACEC,IAAKC,MACLR,UAAS,oBAAeX,IAAUiB,EAAQ,EAAK,SAAW,KAE1D,uBACEN,UAAU,YACVC,KAAK,IACLC,QAAS,SAAAX,GAAK,OAAI,EAAKI,eAAeJ,EAAOe,EAAQ,KAEpDA,EAAQ,OAIf,wBACEN,UAAS,oBACMX,IAASS,EAAsB,WAAa,KAG3D,uBAAGE,UAAU,YAAYC,KAAK,IAAIC,QAASL,KAAKP,UAAhD,gBA1Dd,GAAgCmB,IAAMC,eAmEtC1B,EAAW2B,aAAe,CACxBvB,QAAS,EACTC,KAAM,GCpED,IAAMuB,EAAM,kBACjB,kBAAC,EAAD,CACE1B,MAAO,MCHX2B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.28ed220b.chunk.js","sourcesContent":["import React from 'react';\nimport uuid from 'react-uuid';\nimport PropTypes from 'prop-types';\n\nexport class Pagination extends React.PureComponent {\n  state = {\n    total: this.props.total,\n    perPage: this.props.perPage,\n    page: this.props.page,\n  }\n\n  nextPage = (event) => {\n    event.preventDefault();\n    this.setState(state => ({ page: state.page + 1 }));\n  }\n\n  previousPage = (event) => {\n    event.preventDefault();\n    this.setState(state => ({ page: state.page - 1 }));\n  }\n\n  onClickHandler = (event, value) => {\n    event.preventDefault();\n    this.setState({ page: value });\n  }\n\n  render() {\n    const { total, perPage, page } = this.state;\n    const paginationCalculate = total / perPage;\n\n    return (\n      <>\n        <h1>Pagination</h1>\n        <p>\n          {`${(page - 1) * perPage + 1}-${page * perPage} of ${total}`}\n        </p>\n        <nav aria-label=\"Page navigation example\">\n          <ul className=\"pagination\">\n            <li className={`page-item ${page === 1 ? 'disabled' : ''}`}>\n              <a className=\"page-link\" href=\"/\" onClick={this.previousPage}>\n                Previous\n              </a>\n            </li>\n            {[...Array(paginationCalculate).keys()].map(index => (\n              <li\n                key={uuid()}\n                className={`page-item ${page === (index + 1) ? 'active' : ''}`}\n              >\n                <a\n                  className=\"page-link\"\n                  href=\"/\"\n                  onClick={event => this.onClickHandler(event, index + 1)}\n                >\n                  {index + 1}\n                </a>\n              </li>\n            ))}\n            <li\n              className={\n                `page-item ${page === paginationCalculate ? 'disabled' : ''}`\n              }\n            >\n              <a className=\"page-link\" href=\"/\" onClick={this.nextPage}>Next</a>\n            </li>\n          </ul>\n        </nav>\n      </>\n    );\n  }\n}\n\nPagination.defaultProps = {\n  perPage: 5,\n  page: 1,\n};\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number,\n  page: PropTypes.number,\n};\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Pagination } from './Pagination';\n\nexport const App = () => (\n  <Pagination\n    total={50}\n  />\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}